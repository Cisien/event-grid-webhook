// <auto-generated />
using System;
using EventGridWebhook.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace EventGridWebhook.Migrations
{
    [DbContext(typeof(SensorDataDbContext))]
    [Migration("20201010202239_AddWeatherSensorData")]
    partial class AddWeatherSensorData
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0-rc.1.20451.13");

            modelBuilder.Entity("EventGridWebhook.Data.AirQualitySensorEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("DeviceId")
                        .HasColumnType("text");

                    b.Property<long>("DewPoint_F")
                        .HasColumnType("bigint");

                    b.Property<long>("Humidity")
                        .HasColumnType("bigint");

                    b.Property<decimal>("P0_3_um_A")
                        .HasColumnType("numeric");

                    b.Property<decimal>("P0_3_um_B")
                        .HasColumnType("numeric");

                    b.Property<decimal>("P0_5_um_A")
                        .HasColumnType("numeric");

                    b.Property<decimal>("P0_5_um_B")
                        .HasColumnType("numeric");

                    b.Property<decimal>("P10_0_um_A")
                        .HasColumnType("numeric");

                    b.Property<decimal>("P10_0_um_B")
                        .HasColumnType("numeric");

                    b.Property<decimal>("P1_0_um_A")
                        .HasColumnType("numeric");

                    b.Property<decimal>("P1_0_um_B")
                        .HasColumnType("numeric");

                    b.Property<decimal>("P2_5_um_A")
                        .HasColumnType("numeric");

                    b.Property<decimal>("P2_5_um_B")
                        .HasColumnType("numeric");

                    b.Property<decimal>("P5_0_um_A")
                        .HasColumnType("numeric");

                    b.Property<decimal>("P5_0_um_B")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PM10_0_ug_A")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PM10_0_ug_B")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PM1_0_ug_A")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PM1_0_ug_B")
                        .HasColumnType("numeric");

                    b.Property<string>("PM2_5IndexColor_A")
                        .HasColumnType("text");

                    b.Property<string>("PM2_5IndexColor_B")
                        .HasColumnType("text");

                    b.Property<long>("PM2_5Index_A")
                        .HasColumnType("bigint");

                    b.Property<long>("PM2_5Index_B")
                        .HasColumnType("bigint");

                    b.Property<decimal>("PM2_5_ug_A")
                        .HasColumnType("numeric");

                    b.Property<decimal>("PM2_5_ug_B")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Pressure_mB")
                        .HasColumnType("numeric");

                    b.Property<DateTimeOffset>("SampleTime")
                        .HasColumnType("timestamp with time zone");

                    b.Property<long>("Temperature_F")
                        .HasColumnType("bigint");

                    b.Property<long>("Uptime")
                        .HasColumnType("bigint");

                    b.Property<long>("WifiSignalStrength")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("DeviceId");

                    b.HasIndex("SampleTime");

                    b.ToTable("AirQualityEntries");
                });

            modelBuilder.Entity("EventGridWebhook.Data.WeatherSensorEntry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .UseIdentityByDefaultColumn();

                    b.Property<decimal?>("BarAbsolute")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("BarSeaLevel")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("BarTrend")
                        .HasColumnType("numeric");

                    b.Property<decimal>("DataStructureType")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DewPoint")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("DewPointIn")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("HeatIndex")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("HeatIndexIn")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Hum")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("HumIn")
                        .HasColumnType("numeric");

                    b.Property<decimal>("Lsid")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("RainRateHi")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("RainRateHiLast15_Min")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("RainRateLast")
                        .HasColumnType("numeric");

                    b.Property<int?>("RainSize")
                        .HasColumnType("integer");

                    b.Property<decimal?>("RainStorm")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("RainStormLast")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("RainStormLastEndAt")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("RainStormLastStartAt")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("RainStormStartAt")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("RainfallDaily")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("RainfallLast15_Min")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("RainfallLast24_Hr")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("RainfallLast60_Min")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("RainfallMonthly")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("RainfallYear")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("RxState")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("SolarRad")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Temp")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("TempIn")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ThswIndex")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("ThwIndex")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("TransBatteryFlag")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("Txid")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("UvIndex")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("WetBulb")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("WindChill")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("WindDirAtHiSpeedLast10_Min")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("WindDirAtHiSpeedLast2_Min")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("WindDirLast")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("WindDirScalarAvgLast10_Min")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("WindDirScalarAvgLast1_Min")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("WindDirScalarAvgLast2_Min")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("WindSpeedAvgLast10_Min")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("WindSpeedAvgLast1_Min")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("WindSpeedAvgLast2_Min")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("WindSpeedHiLast10_Min")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("WindSpeedHiLast2_Min")
                        .HasColumnType("numeric");

                    b.Property<decimal?>("WindSpeedLast")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.ToTable("WeatherEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
